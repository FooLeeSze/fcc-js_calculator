{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/js_calculator/js_calculator/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/js_calculator/js_calculator/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/js_calculator/js_calculator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{iniNumState,buildExp,resolveNeg,numKeyCodes,opKeyCodes}from'./utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var deciRegex=/\\./;var negRegex=/^-/;// Initialize array of numbers in the expression\nvar numbers=[iniNumState];export default function Calculator(){// Define states\nvar _useState=useState(iniNumState),_useState2=_slicedToArray(_useState,2),numObj=_useState2[0],setNumObj=_useState2[1];// Current number\nvar _useState3=useState('0'),_useState4=_slicedToArray(_useState3,2),dispText=_useState4[0],setDispText=_useState4[1];// Display text\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),lastInput=_useState6[0],setLastInput=_useState6[1];// Last input\nvar _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),fullExp=_useState8[0],setFullExp=_useState8[1];// Full expression\n// Build current number\nfunction buildNumber(event){var currentNum;var val=event.target.value;if(lastInput==='OPERATION'){// If last input was an operation, \ncurrentNum=_objectSpread({},iniNumState);// current number is complete, \nnumbers.push(numObj);// build the next number\n}else if(lastInput==='EQUALS'){// Else if last input was equals,\ncurrentNum=_objectSpread({},iniNumState);// start new expression\nnumbers=[iniNumState];}else{// Otherwise, continue building current number\ncurrentNum=_objectSpread({},numObj);}// Build number with correct format\nif(val==='.'){if(!currentNum.deci){if(currentNum.num===''){currentNum.num='0.';currentNum.deci=true;setNumObj(currentNum);}else{currentNum.num=currentNum.num+val;currentNum.deci=true;setNumObj(currentNum);}}}else if(val==='-'){if(!currentNum.isNeg){if(currentNum.num==='0'){currentNum.num='';currentNum.isNeg=true;setNumObj(currentNum);}else{currentNum.isNeg=true;setNumObj(currentNum);}}}else if(currentNum.num==='0'){if(val!=='0'){currentNum.num=val;setNumObj(currentNum);}else{currentNum.num='0';setNumObj(currentNum);}}else{currentNum.num=currentNum.num+val;setNumObj(currentNum);}// Display current number and add '-' if number is negative\ncurrentNum.isNeg?setDispText('-'+currentNum.num):setDispText(currentNum.num);// Update last input state\nsetLastInput('NUMBER');// Update full expression\nsetFullExp(buildExp([].concat(_toConsumableArray(numbers),[currentNum])));}// Assign operation\nfunction handleOperator(event){var val=event.target.value;var currentNum=_objectSpread({},numObj);// Don't accept input if first input is an operation\nif(lastInput===null&&val!=='-'){return;}if(val==='-'){// If input is '-'\nif(currentNum.nextOp!==null){// and there is already and operation assigned, build the next number as a negative number\nbuildNumber(event);}else if(currentNum.num===''){// there is no current number, build a negative number\nbuildNumber(event);}else{// else, assign '-' as the operation of the current number\nsetLastInput('OPERATION');currentNum.nextOp=val;setNumObj(currentNum);setDispText(val);}}else{// Else, set operation of the current number\nsetLastInput('OPERATION');currentNum.nextOp=val;setNumObj(currentNum);setDispText(val);}// Correct false negative number if neccessary\nif(currentNum.num===''&&currentNum.nextOp!==null){numbers[numbers.length-1].nextOp=val;setNumObj(numbers[numbers.length-1]);numbers.pop();}}// Clear all\nfunction clr(){setNumObj(iniNumState);// Reinitialize states\nsetDispText('0');setLastInput(null);setFullExp('');numbers=[iniNumState];}// Calculate results when input is '='\nfunction calc(){// Complete the full expression\nnumbers.push(numObj);numbers=resolveNeg(numbers);// If there is an extra operation input at the end, remove it\nif(numbers[numbers.length-1].nextOp!==null){numbers[numbers.length-1].nextOp=null;}// Start calculation\nvar numArr=numbers.slice(1);function isMD(arr){return arr.map(function(x){return x.nextOp==='*'||x.nextOp==='/';});}var indMD;var res;// Prioritize multiplication and divisions\nwhile(isMD(numArr).indexOf(true)>=0){indMD=isMD(numArr).indexOf(true);if(numArr[indMD].nextOp==='*'){res=Number(numArr[indMD].num)*Number(numArr[indMD+1].num);}else if(numArr[indMD].nextOp==='/'){res=Number(numArr[indMD].num)/Number(numArr[indMD+1].num);}var substitute={num:res,nextOp:numArr[indMD+1].nextOp,deci:deciRegex.test(res),isNeg:negRegex.test(res)};numArr=[].concat(_toConsumableArray(numArr.slice(0,indMD)),[substitute],_toConsumableArray(numArr.slice(indMD+2)));}// Calculate remaining additions and subtractions\nwhile(numArr.length>1){if(numArr[0].nextOp==='+'){res=Number(numArr[0].num)+Number(numArr[1].num);}else if(numArr[0].nextOp==='-'){res=Number(numArr[0].num)-Number(numArr[1].num);}var _substitute={num:res,nextOp:numArr[1].nextOp,deci:deciRegex.test(res),isNeg:negRegex.test(res)};numArr=[_substitute].concat(_toConsumableArray(numArr.slice(2)));}// Update states with results\nsetNumObj.apply(void 0,_toConsumableArray(numArr));setDispText(numArr[0].num);setLastInput('EQUALS');numbers=_toConsumableArray(numArr);}// Handles key press\nfunction handleKeyPress(event){var key=event.key;var tempEvent={target:{value:key}};if(numKeyCodes.indexOf(key)>=0){buildNumber(tempEvent);}else if(opKeyCodes.indexOf(key)>=0){handleOperator(tempEvent);}else if(key==='='){calc();}else if(key==='Delete'){clr();}}useEffect(function(){window.addEventListener('keydown',handleKeyPress);return function(){return window.removeEventListener('keydown',handleKeyPress);};},[numObj]);return/*#__PURE__*/_jsxs(\"div\",{id:\"calculator\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"display-container\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"full-exp\",children:fullExp}),/*#__PURE__*/_jsx(\"p\",{id:\"display\",children:dispText})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"buttons-container\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"clear\",onClick:clr,children:\"AC\"}),/*#__PURE__*/_jsx(\"button\",{id:\"divide\",className:\"operation-btn\",onClick:handleOperator,value:\"/\",children:\"\\xF7\"}),/*#__PURE__*/_jsx(\"button\",{id:\"multiply\",className:\"operation-btn\",onClick:handleOperator,value:\"*\",children:\"x\"}),/*#__PURE__*/_jsx(\"button\",{id:\"add\",className:\"operation-btn\",onClick:handleOperator,value:\"+\",children:\"+\"}),/*#__PURE__*/_jsx(\"button\",{id:\"subtract\",className:\"operation-btn\",onClick:handleOperator,value:\"-\",children:\"-\"}),/*#__PURE__*/_jsx(\"button\",{id:\"equals\",className:\"operation-btn\",onClick:calc,children:\"=\"}),/*#__PURE__*/_jsx(\"button\",{id:\"zero\",className:\"num-btn\",value:'0',onClick:buildNumber,children:\"0\"}),/*#__PURE__*/_jsx(\"button\",{id:\"one\",className:\"num-btn\",value:'1',onClick:buildNumber,children:\"1\"}),/*#__PURE__*/_jsx(\"button\",{id:\"two\",className:\"num-btn\",value:'2',onClick:buildNumber,children:\"2\"}),/*#__PURE__*/_jsx(\"button\",{id:\"three\",className:\"num-btn\",value:'3',onClick:buildNumber,children:\"3\"}),/*#__PURE__*/_jsx(\"button\",{id:\"four\",className:\"num-btn\",value:'4',onClick:buildNumber,children:\"4\"}),/*#__PURE__*/_jsx(\"button\",{id:\"five\",className:\"num-btn\",value:'5',onClick:buildNumber,children:\"5\"}),/*#__PURE__*/_jsx(\"button\",{id:\"six\",className:\"num-btn\",value:'6',onClick:buildNumber,children:\"6\"}),/*#__PURE__*/_jsx(\"button\",{id:\"seven\",className:\"num-btn\",value:'7',onClick:buildNumber,children:\"7\"}),/*#__PURE__*/_jsx(\"button\",{id:\"eight\",className:\"num-btn\",value:'8',onClick:buildNumber,children:\"8\"}),/*#__PURE__*/_jsx(\"button\",{id:\"nine\",className:\"num-btn\",value:'9',onClick:buildNumber,children:\"9\"}),/*#__PURE__*/_jsx(\"button\",{id:\"decimal\",className:\"num-btn\",value:'.',onClick:buildNumber,children:\".\"})]})]});}","map":{"version":3,"names":["React","useState","useEffect","iniNumState","buildExp","resolveNeg","numKeyCodes","opKeyCodes","deciRegex","negRegex","numbers","Calculator","numObj","setNumObj","dispText","setDispText","lastInput","setLastInput","fullExp","setFullExp","buildNumber","event","currentNum","val","target","value","push","deci","num","isNeg","handleOperator","nextOp","length","pop","clr","calc","numArr","slice","isMD","arr","map","x","indMD","res","indexOf","Number","substitute","test","handleKeyPress","key","tempEvent","window","addEventListener","removeEventListener"],"sources":["C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/js_calculator/js_calculator/src/Calculator.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {iniNumState, buildExp, resolveNeg, numKeyCodes, opKeyCodes} from './utils'\r\n\r\nconst deciRegex = /\\./\r\nconst negRegex = /^-/\r\n\r\n// Initialize array of numbers in the expression\r\nvar numbers = [iniNumState]\r\n      \r\n\r\nexport default function Calculator() {\r\n    // Define states\r\n    const [numObj, setNumObj] = useState(iniNumState)   // Current number\r\n    const [dispText, setDispText] = useState('0')       // Display text\r\n    const [lastInput, setLastInput] = useState(null)    // Last input\r\n    const [fullExp, setFullExp] = useState('')          // Full expression\r\n\r\n\r\n    // Build current number\r\n    function buildNumber(event) {\r\n        let currentNum;\r\n        let val = event.target.value;\r\n\r\n        if (lastInput === 'OPERATION') {         // If last input was an operation, \r\n            currentNum = {...iniNumState};      // current number is complete, \r\n            numbers.push(numObj)                // build the next number\r\n        } else if (lastInput === 'EQUALS') {    // Else if last input was equals,\r\n            currentNum = {...iniNumState};      // start new expression\r\n            numbers = [iniNumState] \r\n        } else {                                // Otherwise, continue building current number\r\n            currentNum = {...numObj}\r\n        }\r\n\r\n        // Build number with correct format\r\n        if (val === '.') {\r\n            if (!currentNum.deci) {\r\n                if (currentNum.num === '') {\r\n                    currentNum.num = '0.'\r\n                    currentNum.deci = true;\r\n                    setNumObj(currentNum)\r\n                } else {\r\n                    currentNum.num = currentNum.num + val;\r\n                    currentNum.deci = true;\r\n                    setNumObj(currentNum)\r\n                }\r\n            }\r\n        } else if (val === '-') {\r\n            if (!currentNum.isNeg) {\r\n                if (currentNum.num === '0') {\r\n                    currentNum.num = '';\r\n                    currentNum.isNeg = true;\r\n                    setNumObj(currentNum)\r\n                } else {\r\n                    currentNum.isNeg = true\r\n                    setNumObj(currentNum)\r\n                }\r\n            }\r\n        } else if (currentNum.num === '0') {\r\n            if (val !== '0') {\r\n                currentNum.num = val\r\n                setNumObj(currentNum)\r\n            } else {\r\n                currentNum.num = '0'\r\n                setNumObj(currentNum)\r\n            }\r\n        } else {\r\n            currentNum.num = currentNum.num + val\r\n            setNumObj(currentNum)\r\n        }\r\n\r\n        // Display current number and add '-' if number is negative\r\n        currentNum.isNeg ? setDispText('-' + currentNum.num) : setDispText(currentNum.num)\r\n\r\n        // Update last input state\r\n        setLastInput('NUMBER')\r\n\r\n        // Update full expression\r\n        setFullExp(buildExp([...numbers, currentNum]))\r\n    }\r\n\r\n    // Assign operation\r\n    function handleOperator(event) {\r\n        let val = event.target.value;\r\n        let currentNum = {...numObj}\r\n\r\n        // Don't accept input if first input is an operation\r\n        if (lastInput === null  && val !== '-') {\r\n            return\r\n        }\r\n\r\n        if (val === '-') {                          // If input is '-'\r\n            if (currentNum.nextOp !== null) {       // and there is already and operation assigned, build the next number as a negative number\r\n                buildNumber(event)\r\n            } else if (currentNum.num === '') {     // there is no current number, build a negative number\r\n                buildNumber(event)\r\n            } else {                                // else, assign '-' as the operation of the current number\r\n                setLastInput('OPERATION')\r\n                currentNum.nextOp = val;\r\n                setNumObj(currentNum);\r\n                setDispText(val)\r\n            }\r\n        } else {                                    // Else, set operation of the current number\r\n            setLastInput('OPERATION')\r\n            currentNum.nextOp = val;\r\n            setNumObj(currentNum);\r\n            setDispText(val)\r\n        }\r\n\r\n        // Correct false negative number if neccessary\r\n        if (currentNum.num === '' && currentNum.nextOp !== null) {\r\n            numbers[numbers.length - 1].nextOp = val;\r\n            setNumObj(numbers[numbers.length - 1])\r\n            numbers.pop()\r\n        }\r\n    }\r\n\r\n    // Clear all\r\n    function clr() {\r\n        setNumObj(iniNumState)      // Reinitialize states\r\n        setDispText('0')\r\n        setLastInput(null)\r\n        setFullExp('')\r\n        numbers = [iniNumState]\r\n    }\r\n\r\n    // Calculate results when input is '='\r\n    function calc() {\r\n\r\n        // Complete the full expression\r\n        numbers.push(numObj)\r\n        numbers = resolveNeg(numbers)\r\n\r\n        // If there is an extra operation input at the end, remove it\r\n        if(numbers[numbers.length - 1].nextOp !== null) {\r\n            numbers[numbers.length - 1].nextOp = null;\r\n        }\r\n\r\n        // Start calculation\r\n        let numArr = numbers.slice(1)\r\n\r\n        function isMD(arr) {\r\n            return arr.map(x => x.nextOp === '*' || x.nextOp === '/')\r\n        }\r\n\r\n        let indMD;\r\n        let res;\r\n\r\n        // Prioritize multiplication and divisions\r\n        while(isMD(numArr).indexOf(true) >= 0) {\r\n            indMD = isMD(numArr).indexOf(true)\r\n            \r\n            if (numArr[indMD].nextOp === '*') {\r\n                res = Number(numArr[indMD].num) * Number(numArr[indMD + 1].num)\r\n            } else if (numArr[indMD].nextOp === '/') {\r\n                res = Number(numArr[indMD].num) / Number(numArr[indMD + 1].num)\r\n            }\r\n\r\n            let substitute = {\r\n                num: res,\r\n                nextOp:  numArr[indMD + 1].nextOp,\r\n                deci: deciRegex.test(res),\r\n                isNeg: negRegex.test(res)\r\n            }\r\n\r\n            numArr = [...numArr.slice(0, indMD), substitute, ...numArr.slice(indMD+2)]\r\n        }\r\n\r\n        // Calculate remaining additions and subtractions\r\n        while(numArr.length > 1) {\r\n            if (numArr[0].nextOp === '+') {\r\n                res = Number(numArr[0].num) + Number(numArr[1].num)\r\n            } else if (numArr[0].nextOp === '-') {\r\n                res = Number(numArr[0].num) - Number(numArr[1].num)\r\n            }\r\n\r\n            let substitute = {\r\n                num: res,\r\n                nextOp:  numArr[1].nextOp,\r\n                deci: deciRegex.test(res),\r\n                isNeg: negRegex.test(res)\r\n            }\r\n\r\n            numArr = [substitute, ...numArr.slice(2)]\r\n        }\r\n\r\n        // Update states with results\r\n        setNumObj(...numArr)\r\n        setDispText(numArr[0].num)\r\n        setLastInput('EQUALS')\r\n        numbers = [...numArr]\r\n    }\r\n\r\n    // Handles key press\r\n    function handleKeyPress(event) {\r\n        let key = event.key;\r\n        let tempEvent = {target: {value: key}}\r\n\r\n        if (numKeyCodes.indexOf(key) >= 0) {\r\n            buildNumber(tempEvent)\r\n        } else if (opKeyCodes.indexOf(key) >= 0) {\r\n            handleOperator(tempEvent)\r\n        } else if (key === '=') {\r\n            calc()\r\n        } else if (key === 'Delete') {\r\n            clr()\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        window.addEventListener('keydown', handleKeyPress)\r\n        return () => window.removeEventListener('keydown', handleKeyPress)\r\n    }, [numObj])\r\n\r\n    return (\r\n        <div id=\"calculator\">\r\n            <div id=\"display-container\">\r\n                <p id=\"full-exp\">{fullExp}</p>\r\n                <p id=\"display\">{dispText}</p>\r\n            </div>\r\n\r\n            <div id=\"buttons-container\">\r\n                <button id=\"clear\" onClick={clr}>AC</button>\r\n                <button id=\"divide\" className=\"operation-btn\" onClick={handleOperator} value='/'>÷</button>\r\n                <button id=\"multiply\" className=\"operation-btn\" onClick={handleOperator} value='*'>x</button>\r\n                <button id=\"add\" className=\"operation-btn\" onClick={handleOperator} value='+'>+</button>\r\n                <button id=\"subtract\" className=\"operation-btn\" onClick={handleOperator} value='-'>-</button>\r\n                <button id=\"equals\" className=\"operation-btn\" onClick={calc}>=</button>\r\n\r\n                <button id=\"zero\" className=\"num-btn\" value={'0'} onClick={buildNumber}>0</button>\r\n                <button id=\"one\" className=\"num-btn\" value={'1'} onClick={buildNumber}>1</button>\r\n                <button id=\"two\" className=\"num-btn\" value={'2'} onClick={buildNumber}>2</button>\r\n                <button id=\"three\" className=\"num-btn\" value={'3'} onClick={buildNumber}>3</button>\r\n                <button id=\"four\" className=\"num-btn\" value={'4'} onClick={buildNumber}>4</button>\r\n                <button id=\"five\" className=\"num-btn\" value={'5'} onClick={buildNumber}>5</button>\r\n                <button id=\"six\" className=\"num-btn\" value={'6'} onClick={buildNumber}>6</button>\r\n                <button id=\"seven\" className=\"num-btn\" value={'7'} onClick={buildNumber}>7</button>\r\n                <button id=\"eight\" className=\"num-btn\" value={'8'} onClick={buildNumber}>8</button>\r\n                <button id=\"nine\" className=\"num-btn\" value={'9'} onClick={buildNumber}>9</button>\r\n\r\n                <button id=\"decimal\" className=\"num-btn\" value={'.'} onClick={buildNumber}>.</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}