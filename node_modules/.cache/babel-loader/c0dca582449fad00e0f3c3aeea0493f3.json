{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lee Sze\\\\Documents\\\\fcc-frontend-lib-proj\\\\js_calculator\\\\js_calculator\\\\src\\\\Components\\\\Calculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst deciRegex = /\\./;\nconst negRegex = /^-/;\nconst iniNumState = {\n  num: '',\n  nextOp: null,\n  deci: false,\n  isNeg: false\n};\nvar numbers = [iniNumState];\n\nconst buildExp = numArr => {\n  console.log(numArr);\n  let simplified = numArr.slice(1).map(x => {\n    if (x.isNeg) {\n      return '-' + x.num + (x.nextOp ? x.nextOp : '');\n    } else {\n      return x.num + (x.nextOp ? x.nextOp : '');\n    }\n  });\n  return simplified.join('');\n};\n\nconst resolveNeg = numArr => {\n  return numArr.map(x => {\n    if (x.isNeg) {\n      return { ...x,\n        num: '-' + x.num\n      };\n    } else {\n      return x;\n    }\n  });\n};\n\nconst numKeyCodes = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.'];\nconst opKeyCodes = ['*', '/', '+', '-'];\nexport default function Calculator() {\n  _s();\n\n  const [numObj, setNumObj] = useState(iniNumState);\n  const [dispText, setDispText] = useState('0');\n  const [lastInput, setLastInput] = useState(null);\n  const [fullExp, setFullExp] = useState(''); // Build current number\n\n  function buildNumber(event) {\n    let currentNum;\n    let val = event.target.value;\n\n    if (lastInput === 'OPERATOR') {\n      currentNum = { ...iniNumState\n      };\n      numbers.push(numObj);\n    } else if (lastInput === 'EQUALS') {\n      currentNum = { ...iniNumState\n      };\n      numbers = [iniNumState];\n    } else {\n      currentNum = { ...numObj\n      };\n    }\n\n    if (val === '.') {\n      if (!currentNum.deci) {\n        if (currentNum.num === '') {\n          currentNum.num = '0.';\n          currentNum.deci = true;\n          setNumObj(currentNum);\n        } else {\n          currentNum.num = currentNum.num + val;\n          currentNum.deci = true;\n          setNumObj(currentNum);\n        }\n      }\n    } else if (val === '-') {\n      if (!currentNum.isNeg) {\n        if (currentNum.num === '0') {\n          currentNum.num = '';\n          currentNum.isNeg = true;\n          setNumObj(currentNum);\n        } else {\n          currentNum.isNeg = true;\n          setNumObj(currentNum);\n        }\n      }\n    } else if (currentNum.num === '0') {\n      if (val !== '0') {\n        currentNum.num = val;\n        setNumObj(currentNum);\n      } else {\n        currentNum.num = '0';\n        setNumObj(currentNum);\n      }\n    } else {\n      currentNum.num = currentNum.num + val;\n      setNumObj(currentNum);\n    }\n\n    currentNum.isNeg ? setDispText('-' + currentNum.num) : setDispText(currentNum.num);\n    setLastInput('NUMBER');\n    setFullExp(buildExp([...numbers, currentNum]));\n  } // Assign operator\n\n\n  function handleOperator(event) {\n    let val = event.target.value;\n    let currentNum = { ...numObj\n    };\n\n    if (val === '-') {\n      if (currentNum.nextOp !== null) {\n        buildNumber(event);\n      } else if (currentNum.num === '') {\n        buildNumber(event);\n      } else {\n        setLastInput('OPERATOR');\n        currentNum.nextOp = val;\n        setNumObj(currentNum);\n        setDispText(val);\n      }\n    } else {\n      setLastInput('OPERATOR');\n      currentNum.nextOp = val;\n      setNumObj(currentNum);\n      setDispText(val);\n    } // Correct false negative number if neccessary\n\n\n    if (currentNum.num === '' && currentNum.nextOp !== null) {\n      numbers[numbers.length - 1].nextOp = val;\n      setNumObj(numbers[numbers.length - 1]);\n      numbers.pop();\n    }\n  }\n\n  function clr() {\n    setNumObj(iniNumState);\n    setDispText('0');\n    setLastInput(null);\n    setFullExp('');\n    numbers = [iniNumState];\n  }\n\n  function calc() {\n    numbers.push(numObj);\n    numbers = resolveNeg(numbers);\n\n    if (numbers[numbers.length - 1].nextOp !== null) {\n      numbers[numbers.length - 1].nextOp = null;\n    }\n\n    let numArr = numbers.slice(1);\n\n    function isMD(arr) {\n      return arr.map(x => x.nextOp === '*' || x.nextOp === '/');\n    }\n\n    let indMD;\n    let res;\n\n    while (isMD(numArr).indexOf(true) >= 0) {\n      indMD = isMD(numArr).indexOf(true);\n\n      if (numArr[indMD].nextOp === '*') {\n        res = Number(numArr[indMD].num) * Number(numArr[indMD + 1].num);\n      } else if (numArr[indMD].nextOp === '/') {\n        res = Number(numArr[indMD].num) / Number(numArr[indMD + 1].num);\n      }\n\n      let substitute = {\n        num: res,\n        nextOp: numArr[indMD + 1].nextOp,\n        deci: deciRegex.test(res),\n        isNeg: negRegex.test(res)\n      };\n      numArr = [...numArr.slice(0, indMD), substitute, ...numArr.slice(indMD + 2)];\n    }\n\n    while (numArr.length > 1) {\n      if (numArr[0].nextOp === '+') {\n        res = Number(numArr[0].num) + Number(numArr[1].num);\n      } else if (numArr[0].nextOp === '-') {\n        res = Number(numArr[0].num) - Number(numArr[1].num);\n      }\n\n      let substitute = {\n        num: res,\n        nextOp: numArr[1].nextOp,\n        deci: deciRegex.test(res),\n        isNeg: negRegex.test(res)\n      };\n      numArr = [substitute, ...numArr.slice(2)];\n    }\n\n    setNumObj(...numArr);\n    setDispText(numArr[0].num);\n    setLastInput('EQUALS');\n    numbers = [...numArr];\n  }\n\n  function handleKeyPress(event) {\n    let key = event.key;\n    let tempEvent = {\n      target: {\n        value: key\n      }\n    };\n\n    if (numKeyCodes.indexOf(key) >= 0) {\n      buildNumber(tempEvent);\n    } else if (opKeyCodes.indexOf(key) >= 0) {\n      handleOperator(tempEvent);\n    } else if (key === '=') {\n      calc();\n    } else if (key === 'Delete') {\n      clr();\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [numObj]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"display-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"full-exp\",\n        children: fullExp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"display\",\n        children: dispText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"clear\",\n        onClick: clr,\n        children: \"AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"divide\",\n        className: \"operation-btn\",\n        onClick: handleOperator,\n        value: \"/\",\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"multiply\",\n        className: \"operation-btn\",\n        onClick: handleOperator,\n        value: \"*\",\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"add\",\n        className: \"operation-btn\",\n        onClick: handleOperator,\n        value: \"+\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"subtract\",\n        className: \"operation-btn\",\n        onClick: handleOperator,\n        value: \"-\",\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"equals\",\n        className: \"operation-btn\",\n        onClick: calc,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"zero\",\n        className: \"num-btn\",\n        value: '0',\n        onClick: buildNumber,\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"one\",\n        className: \"num-btn\",\n        value: '1',\n        onClick: buildNumber,\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"two\",\n        className: \"num-btn\",\n        value: '2',\n        onClick: buildNumber,\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"three\",\n        className: \"num-btn\",\n        value: '3',\n        onClick: buildNumber,\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"four\",\n        className: \"num-btn\",\n        value: '4',\n        onClick: buildNumber,\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"five\",\n        className: \"num-btn\",\n        value: '5',\n        onClick: buildNumber,\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"six\",\n        className: \"num-btn\",\n        value: '6',\n        onClick: buildNumber,\n        children: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"seven\",\n        className: \"num-btn\",\n        value: '7',\n        onClick: buildNumber,\n        children: \"7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"eight\",\n        className: \"num-btn\",\n        value: '8',\n        onClick: buildNumber,\n        children: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"nine\",\n        className: \"num-btn\",\n        value: '9',\n        onClick: buildNumber,\n        children: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"decimal\",\n        className: \"num-btn\",\n        value: '.',\n        onClick: buildNumber,\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Calculator, \"xIoV5s1uvYBdGO4dLDeF9+1baME=\");\n\n_c = Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","useEffect","deciRegex","negRegex","iniNumState","num","nextOp","deci","isNeg","numbers","buildExp","numArr","console","log","simplified","slice","map","x","join","resolveNeg","numKeyCodes","opKeyCodes","Calculator","numObj","setNumObj","dispText","setDispText","lastInput","setLastInput","fullExp","setFullExp","buildNumber","event","currentNum","val","target","value","push","handleOperator","length","pop","clr","calc","isMD","arr","indMD","res","indexOf","Number","substitute","test","handleKeyPress","key","tempEvent","window","addEventListener","removeEventListener"],"sources":["C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/js_calculator/js_calculator/src/Components/Calculator.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nconst deciRegex = /\\./\r\nconst negRegex = /^-/\r\n\r\nconst iniNumState = {\r\n    num: '',\r\n    nextOp: null,\r\n    deci: false,\r\n    isNeg: false\r\n};\r\n\r\nvar numbers = [iniNumState]\r\n\r\nconst buildExp = (numArr) => {\r\n\r\n    console.log(numArr)\r\n    let simplified = numArr.slice(1).map(x => {\r\n        if (x.isNeg) {\r\n            return '-' + x.num + (x.nextOp ? x.nextOp : '')\r\n        } else { \r\n            return x.num + (x.nextOp ? x.nextOp : '')\r\n        }\r\n    })\r\n    return simplified.join('')\r\n}\r\n\r\nconst resolveNeg = (numArr) => {\r\n    return numArr.map(x => {\r\n        if (x.isNeg) {\r\n            return {\r\n                ...x,\r\n                num: '-' + x.num\r\n            }\r\n        } else {\r\n            return x\r\n        }\r\n    })\r\n}\r\n\r\nconst numKeyCodes = ['0', '1', '2', '3', '4', \r\n                    '5', '6', '7', '8', '9', '.'];\r\nconst opKeyCodes = ['*', '/', '+', '-']\r\n                    \r\n\r\nexport default function Calculator() {\r\n    const [numObj, setNumObj] = useState(iniNumState)\r\n    const [dispText, setDispText] = useState('0')\r\n    const [lastInput, setLastInput] = useState(null)\r\n    const [fullExp, setFullExp] = useState('')\r\n\r\n\r\n    // Build current number\r\n    function buildNumber(event) {\r\n        let currentNum;\r\n        let val = event.target.value;\r\n\r\n        if (lastInput === 'OPERATOR') {\r\n            currentNum = {...iniNumState};\r\n            numbers.push(numObj)\r\n        } else if (lastInput === 'EQUALS') {\r\n            currentNum = {...iniNumState};\r\n            numbers = [iniNumState]\r\n        } else {\r\n            currentNum = {...numObj}\r\n        }\r\n\r\n        if (val === '.') {\r\n            if (!currentNum.deci) {\r\n                if (currentNum.num === '') {\r\n                    currentNum.num = '0.'\r\n                    currentNum.deci = true;\r\n                    setNumObj(currentNum)\r\n                } else {\r\n                    currentNum.num = currentNum.num + val;\r\n                    currentNum.deci = true;\r\n                    setNumObj(currentNum)\r\n                }\r\n            }\r\n        } else if (val === '-') {\r\n            if (!currentNum.isNeg) {\r\n                if (currentNum.num === '0') {\r\n                    currentNum.num = '';\r\n                    currentNum.isNeg = true;\r\n                    setNumObj(currentNum)\r\n                } else {\r\n                    currentNum.isNeg = true\r\n                    setNumObj(currentNum)\r\n                }\r\n            }\r\n        } else if (currentNum.num === '0') {\r\n            if (val !== '0') {\r\n                currentNum.num = val\r\n                setNumObj(currentNum)\r\n            } else {\r\n                currentNum.num = '0'\r\n                setNumObj(currentNum)\r\n            }\r\n        } else {\r\n            currentNum.num = currentNum.num + val\r\n            setNumObj(currentNum)\r\n        }\r\n\r\n\r\n        currentNum.isNeg ? setDispText('-' + currentNum.num) : setDispText(currentNum.num)\r\n\r\n        setLastInput('NUMBER')\r\n\r\n        setFullExp(buildExp([...numbers, currentNum]))\r\n    }\r\n\r\n    // Assign operator\r\n    function handleOperator(event) {\r\n        let val = event.target.value;\r\n        let currentNum = {...numObj}\r\n\r\n        if (val === '-') {\r\n            if (currentNum.nextOp !== null) {\r\n                buildNumber(event)\r\n            } else if (currentNum.num === '') {\r\n                buildNumber(event)\r\n            } else {\r\n                setLastInput('OPERATOR')\r\n                currentNum.nextOp = val;\r\n                setNumObj(currentNum);\r\n                setDispText(val)\r\n            }\r\n        } else {\r\n            setLastInput('OPERATOR')\r\n            currentNum.nextOp = val;\r\n            setNumObj(currentNum);\r\n            setDispText(val)\r\n        }\r\n\r\n        // Correct false negative number if neccessary\r\n        if (currentNum.num === '' && currentNum.nextOp !== null) {\r\n            numbers[numbers.length - 1].nextOp = val;\r\n            setNumObj(numbers[numbers.length - 1])\r\n            numbers.pop()\r\n        }\r\n    }\r\n\r\n    function clr() {\r\n        setNumObj(iniNumState)\r\n        setDispText('0')\r\n        setLastInput(null)\r\n        setFullExp('')\r\n        numbers = [iniNumState]\r\n    }\r\n\r\n    function calc() {\r\n\r\n        numbers.push(numObj)\r\n        numbers = resolveNeg(numbers)\r\n\r\n        if(numbers[numbers.length - 1].nextOp !== null) {\r\n            numbers[numbers.length - 1].nextOp = null;\r\n        }\r\n\r\n        let numArr = numbers.slice(1)\r\n\r\n        function isMD(arr) {\r\n            return arr.map(x => x.nextOp === '*' || x.nextOp === '/')\r\n        }\r\n\r\n        let indMD;\r\n        let res;\r\n\r\n        while(isMD(numArr).indexOf(true) >= 0) {\r\n            indMD = isMD(numArr).indexOf(true)\r\n            \r\n            if (numArr[indMD].nextOp === '*') {\r\n                res = Number(numArr[indMD].num) * Number(numArr[indMD + 1].num)\r\n            } else if (numArr[indMD].nextOp === '/') {\r\n                res = Number(numArr[indMD].num) / Number(numArr[indMD + 1].num)\r\n            }\r\n\r\n            let substitute = {\r\n                num: res,\r\n                nextOp:  numArr[indMD + 1].nextOp,\r\n                deci: deciRegex.test(res),\r\n                isNeg: negRegex.test(res)\r\n            }\r\n\r\n            numArr = [...numArr.slice(0, indMD), substitute, ...numArr.slice(indMD+2)]\r\n        }\r\n\r\n        while(numArr.length > 1) {\r\n            if (numArr[0].nextOp === '+') {\r\n                res = Number(numArr[0].num) + Number(numArr[1].num)\r\n            } else if (numArr[0].nextOp === '-') {\r\n                res = Number(numArr[0].num) - Number(numArr[1].num)\r\n            }\r\n\r\n            let substitute = {\r\n                num: res,\r\n                nextOp:  numArr[1].nextOp,\r\n                deci: deciRegex.test(res),\r\n                isNeg: negRegex.test(res)\r\n            }\r\n\r\n            numArr = [substitute, ...numArr.slice(2)]\r\n        }\r\n\r\n        setNumObj(...numArr)\r\n        setDispText(numArr[0].num)\r\n        setLastInput('EQUALS')\r\n        numbers = [...numArr]\r\n    }\r\n\r\n    function handleKeyPress(event) {\r\n        let key = event.key;\r\n        let tempEvent = {target: {value: key}}\r\n\r\n        if (numKeyCodes.indexOf(key) >= 0) {\r\n            buildNumber(tempEvent)\r\n        } else if (opKeyCodes.indexOf(key) >= 0) {\r\n            handleOperator(tempEvent)\r\n        } else if (key === '=') {\r\n            calc()\r\n        } else if (key === 'Delete') {\r\n            clr()\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        window.addEventListener('keydown', handleKeyPress)\r\n        return () => window.removeEventListener('keydown', handleKeyPress)\r\n    }, [numObj])\r\n\r\n    return (\r\n        <div id=\"calculator\">\r\n            <div id=\"display-container\">\r\n                <p id=\"full-exp\">{fullExp}</p>\r\n                <p id=\"display\">{dispText}</p>\r\n            </div>\r\n\r\n            <div id=\"buttons-container\">\r\n                <button id=\"clear\" onClick={clr}>AC</button>\r\n                <button id=\"divide\" className=\"operation-btn\" onClick={handleOperator} value='/'>/</button>\r\n                <button id=\"multiply\" className=\"operation-btn\" onClick={handleOperator} value='*'>x</button>\r\n                <button id=\"add\" className=\"operation-btn\" onClick={handleOperator} value='+'>+</button>\r\n                <button id=\"subtract\" className=\"operation-btn\" onClick={handleOperator} value='-'>-</button>\r\n                <button id=\"equals\" className=\"operation-btn\" onClick={calc}>=</button>\r\n\r\n                <button id=\"zero\" className=\"num-btn\" value={'0'} onClick={buildNumber}>0</button>\r\n                <button id=\"one\" className=\"num-btn\" value={'1'} onClick={buildNumber}>1</button>\r\n                <button id=\"two\" className=\"num-btn\" value={'2'} onClick={buildNumber}>2</button>\r\n                <button id=\"three\" className=\"num-btn\" value={'3'} onClick={buildNumber}>3</button>\r\n                <button id=\"four\" className=\"num-btn\" value={'4'} onClick={buildNumber}>4</button>\r\n                <button id=\"five\" className=\"num-btn\" value={'5'} onClick={buildNumber}>5</button>\r\n                <button id=\"six\" className=\"num-btn\" value={'6'} onClick={buildNumber}>6</button>\r\n                <button id=\"seven\" className=\"num-btn\" value={'7'} onClick={buildNumber}>7</button>\r\n                <button id=\"eight\" className=\"num-btn\" value={'8'} onClick={buildNumber}>8</button>\r\n                <button id=\"nine\" className=\"num-btn\" value={'9'} onClick={buildNumber}>9</button>\r\n\r\n                <button id=\"decimal\" className=\"num-btn\" value={'.'} onClick={buildNumber}>.</button>\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}